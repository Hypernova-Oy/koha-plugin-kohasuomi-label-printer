name: CI
on: [push]
jobs:
  unit_tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        koha-version: [master, stable, oldstable]
    steps:
    - uses: actions/checkout@v1

    - name: Check out Koha
      run: |
        cd ..
        pwd
        ls -alh
        echo "MATRIX KOHA VERSION: ${{ matrix.koha-version }}"
        if [[ "${{ matrix.koha-version }}" == "master" ]]; then
            KOHA_VERSION_BRANCH_NAME='master'
        elif [[ "${{ matrix.koha-version }}" == "stable" ]]; then
            KOHA_VERSION_LINE=$(git ls-remote --heads git://git.koha-community.org/koha.git | grep '[0-9]\{2\}\.[0-9]\{2\}\.x' | tac | sed '1q;d')
            echo "KOHA VERSION LINE: $KOHA_VERSION_LINE"
            IFS='/' read -ra KOHA_VERSION_LINE_PARTS <<< "$KOHA_VERSION_LINE"
            KOHA_VERSION_BRANCH_NAME=${KOHA_VERSION_LINE_PARTS[2]}
        elif [[ "${{ matrix.koha-version }}" == "oldstable" ]]; then
            KOHA_VERSION_LINE=$(git ls-remote --heads git://git.koha-community.org/koha.git | grep '[0-9]\{2\}\.[0-9]\{2\}\.x' | tac | sed '2q;d')
            echo "KOHA VERSION LINE: $KOHA_VERSION_LINE"
            IFS='/' read -ra KOHA_VERSION_LINE_PARTS <<< "$KOHA_VERSION_LINE"
            KOHA_VERSION_BRANCH_NAME=${KOHA_VERSION_LINE_PARTS[2]}
        fi
        echo "KOHA VERSION BRANCH NAME: $KOHA_VERSION_BRANCH_NAME"
        git clone --branch $KOHA_VERSION_BRANCH_NAME --single-branch --depth 1 git://git.koha-community.org/koha.git kohaclone
      
    - name: Export additional variables needed by koha-testing-docker
      run: |
        cd ..
        pwd
        ls -alh
        IFS='/' read -r -a parts <<< "$GITHUB_REPOSITORY"
        export GITHUB_REPO="${parts[1]}"
        export ROOT_DIR="$(pwd)"
        export LOCAL_USER_ID="$(id -u)" # Needed for koha-testing-docker
        export SYNC_REPO="$ROOT_DIR/kohaclone"
        export KOHA_INTRANET_URL="http://127.0.0.1:8081"
        export KOHA_MARC_FLAVOUR="marc21"
        echo ::set-env name=GITHUB_REPO::$GITHUB_REPO
        echo ::set-env name=ROOT_DIR::$ROOT_DIR
        echo ::set-env name=LOCAL_USER_ID::$LOCAL_USER_ID
        echo ::set-env name=SYNC_REPO::$SYNC_REPO
        echo ::set-env name=KOHA_INTRANET_URL::$KOHA_INTRANET_URL
        echo ::set-env name=KOHA_MARC_FLAVOUR::$KOHA_MARC_FLAVOUR
        echo ::set-env name=RUN_TESTS_AND_EXIT::no
        echo ::set-env name=KOHA_IMAGE::master
        echo "GITHUB REPO: $GITHUB_REPO"
        echo "ROOT DIR: $ROOT_DIR"
        echo "SYNC_REPO: $SYNC_REPO"
        ls -alh $SYNC_REPO

    - name: Set up koha-testing-docker
      run: |
        sudo sysctl -w vm.max_map_count=262144
        wget -O docker-compose.yml https://gitlab.com/koha-community/koha-testing-docker/raw/master/docker-compose.yml
        mkdir -p env
        wget -O env/defaults.env https://gitlab.com/koha-community/koha-testing-docker/raw/master/env/defaults.env
        cp env/defaults.env .env
        docker-compose pull
#    - name: Setup Debug Session
#      uses: csexton/debugger-action@master

    - name: Run tests
      run: |
        pwd
        ls -alh
        docker-compose -f docker-compose.yml -p koha up --detach
        cd ..
        pwd
        ls -alh
        echo "SLEEPING 3 MINUTES"
        sleep 60
        echo "1 MINUTE DONE"
        sleep 60
        echo "2 MINUTES DONE"
        sleep 60
        echo "3 MINUTES DONE"
        echo "WAKING UP"
        docker cp $GITHUB_REPO/. koha_koha_1:/var/lib/koha/kohadev/plugins
        docker exec koha_koha_1 bash -c 'prove /var/lib/koha/kohadev/plugins/t'
        
    - name: Post test cleanup
      run: |
        docker-compose down
        docker rm -f $(docker ps -a -f "name=koha_" -q)
        docker volume prune -f
        docker image  prune -f
        rm docker-compose.yml
        rm -rf env .env

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: unit_tests
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v1

    - name: Run build step of gulpfile
      uses: elstudio/actions-js-build/build@v2

    - name: Get Previous tag
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@master"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: Get next minor version
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@master"
      with:
        version: ${{ steps.previoustag.outputs.tag }}

    - name: Create release kpz artifact
      run: |
        PLUGIN_PERL_MODULE=$(find . -regex '\./Koha/Plugin/Com/ByWaterSolutions/[A-Za-z]*\.pm$')
        echo "PLUGIN PERL MODULE: $PLUGIN_PERL_MODULE"
        echo "NEXT VERSION: ${{ steps.semvers.outputs.v_patch }}"
        sed -i -e "s/{VERSION}/${{ steps.semvers.outputs.v_patch }}/g" $PLUGIN_PERL_MODULE

        TODAY_ISO=$(date '+%Y-%m-%d')
        sed -i -e "s/1900-01-01/${TODAY_ISO}/g" $PLUGIN_PERL_MODULE

        git diff

        PACKAGE_NAME=$(jq -r '.name' package.json)
        RELEASE_FILENAME="$PACKAGE_NAME-${{ steps.semvers.outputs.v_patch }}.kpz"
        mkdir dist
        cp -r Koha dist/.
        cd dist
        zip -r ../${RELEASE_FILENAME} ./Koha
        cd ..
        rm -rf dist
        ls -alh
